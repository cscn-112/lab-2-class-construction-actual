name: C++ CI

on:
  push:
    paths: cpp/**
  pull_request:
    paths: cpp/**

env:
  cwd: cpp

  run_main: true
  run_unit_tests: true

  enable_durability_measures: true
  cache-name: build-cache

jobs:
  suite:
    name: C++ Build & Test
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
        include:
          - os: ubuntu-latest
            time_limit: 2

    runs-on: ${{ matrix.os }}
    cancel-timeout-minutes: ${{ matrix.time_limit || 10 }}
    defaults:
      run:
        working-directory: ${{ env.cwd }}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          sparse-checkout: ${{ env.cwd }}

      - name: Add cache
        uses: actions/cache@v3
        env:
          base-key: ${{ env.cache-name }}-${{ runner.os }}
        with:
          path: |
            ${{ env.cwd }}/zig-out
            ${{ env.cwd }}/zig-cache
          key: ${{ env.base-key }}-${{ env.cwd }}-${{ github.head_ref }}
          restore-keys: ${{ env.base-key }}

      - name: Set up Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.11.0

      # Where the magic happens :sparkle:

      - name: Build code
        id: build
        continue-on-error: ${{ env.enable_durability_measures && true || false }}
        run: zig build --verbose --summary all --color on
      - name: Build code fallback
        id: build_fallback
        if: env.enable_durability_measures && steps.build.outcome == 'failure'
        run: zig build-exe -lc++ --name main src/**.cpp --summary all --color on
      - name: Run main
        if: env.run_main
        env:
          discriminant: ${{ !(env.enable_durability_measures && steps.build.outcome == 'failure') }}

          build_arm: zig build run
          fallback_arm: ./main
        run: ${{ env.discriminant && env.build_arm || env.fallback_arm }}
      - name: Test code
        if: env.run_unit_tests
        run: zig test ${{ env.src_dir }} --color on
        env:
          src_dir: ${{ runner.os == 'Windows' && 'src/sanity_test.zig' || 'src/**.zig' }}

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ env.cwd }}-${{ runner.os }}
          path: |
            ${{ env.cwd }}/src
            ${{ env.cwd }}/zig-out
            ${{ env.cwd }}/README.md
